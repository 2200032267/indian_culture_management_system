{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vighesh\\\\Desktop\\\\PROJECT\\\\INDIAN CULTURE MANAGEMENT SYSTEM\\\\INDIAN CULTURE MANAGEMENT SYSTEM\\\\client\\\\src\\\\components\\\\StateList.js\",\n  _s = $RefreshSig$();\n// StateList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateList = () => {\n  _s();\n  const [stateList, setStateList] = useState([]);\n  useEffect(() => {\n    // Fetch the list of states from your API endpoint\n    fetch('/api/states') // Update the endpoint to match your server\n    .then(response => response.json()).then(data => setStateList(data)).catch(error => console.error('Error fetching state list:', error));\n  }, []);\n\n  // Sample states data\n  const sampleStates = [{\n    _id: 1,\n    name: 'Andhra Pradesh'\n  }, {\n    _id: 2,\n    name: 'Maharashtra'\n  }, {\n    _id: 3,\n    name: 'Tamil Nadu'\n  }, {\n    _id: 4,\n    name: 'Karnataka'\n  }, {\n    _id: 5,\n    name: 'Uttar Pradesh'\n  }];\n\n  // If the state list is empty (initial load), use sample states\n  const statesToDisplay = stateList.length > 0 ? stateList : sampleStates;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"State List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: statesToDisplay.map(state => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: state.name\n      }, state._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(StateList, \"m+ZuSB1fb9Si0VxXIGr9hbrVx+Y=\");\n_c = StateList;\nexport default StateList;\nvar _c;\n$RefreshReg$(_c, \"StateList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StateList","_s","stateList","setStateList","fetch","then","response","json","data","catch","error","console","sampleStates","_id","name","statesToDisplay","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","state","_c","$RefreshReg$"],"sources":["C:/Users/Vighesh/Desktop/PROJECT/INDIAN CULTURE MANAGEMENT SYSTEM/INDIAN CULTURE MANAGEMENT SYSTEM/client/src/components/StateList.js"],"sourcesContent":["// StateList.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst StateList = () => {\r\n  const [stateList, setStateList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of states from your API endpoint\r\n    fetch('/api/states') // Update the endpoint to match your server\r\n      .then(response => response.json())\r\n      .then(data => setStateList(data))\r\n      .catch(error => console.error('Error fetching state list:', error));\r\n  }, []);\r\n\r\n  // Sample states data\r\n  const sampleStates = [\r\n    { _id: 1, name: 'Andhra Pradesh' },\r\n    { _id: 2, name: 'Maharashtra' },\r\n    { _id: 3, name: 'Tamil Nadu' },\r\n    { _id: 4, name: 'Karnataka' },\r\n    { _id: 5, name: 'Uttar Pradesh' },\r\n  ];\r\n\r\n  // If the state list is empty (initial load), use sample states\r\n  const statesToDisplay = stateList.length > 0 ? stateList : sampleStates;\r\n\r\n  return (\r\n    <div>\r\n      <h2>State List</h2>\r\n      <ul>\r\n        {statesToDisplay.map(state => (\r\n          <li key={state._id}>{state.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateList;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,aAAa,CAAC,CAAC;IAAA,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAG,CACnB;IAAEC,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,EAClC;IAAED,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC/B;IAAED,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAa,CAAC,EAC9B;IAAED,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC7B;IAAED,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAgB,CAAC,CAClC;;EAED;EACA,MAAMC,eAAe,GAAGb,SAAS,CAACc,MAAM,GAAG,CAAC,GAAGd,SAAS,GAAGU,YAAY;EAEvE,oBACEb,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAAkB,QAAA,EACGF,eAAe,CAACO,GAAG,CAACC,KAAK,iBACxBxB,OAAA;QAAAkB,QAAA,EAAqBM,KAAK,CAACT;MAAI,GAAtBS,KAAK,CAACV,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}